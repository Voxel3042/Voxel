@name FFT_Clip
@persist [E O Eb]:entity F:array SS Size
@persist [Site Link Title TextSearch Music]:string
@persist [Table Request Titl]:table
@persist [Names Links]:array
@persist Show I 

if(first()){
    runOnTick(1)    
    runOnHTTP(1)    
    Names = array()
    Links = array()
    
    dPanel("Panel" , vec2(450 , 100) , vec2(320 , 450))
    dText("Panel" , " ") dLabel("MP by: " + findPlayerBySteamID("STEAM_0:0:142998474"):name() , "Panel" , vec2(6,4))
    dButton("close" , "Panel" , vec2(320 - 25 , 2) , vec2(20))
    dButton("play" , "Panel" , vec2(320 - 50 , 2) , vec2(20))
    dText("play" , "||")
    dText("close" , "X")
    dShow("Panel" , 0) dShowCloseButton("Panel" , 0)
    dLabel("S" , "Panel" , vec2(5 , 25)) dText("S" , "Search")
    dTextBox("SearchBox" , "Panel" , vec2(5 , 40) , 310)
    dButton("Find" , "Panel" , vec2(5 , 60) , vec2(40 , 20))
    dLabel("L" , "Panel" , vec2(5 , 90)) dText("L" , "List Found's")
    dListBox("List" , "Panel" , vec2(5 , 110) , vec2(310 , 310))
    dArray("List" , Names)
    dButton("Play" , "Panel" , vec2(5 , 420) , vec2(40 , 20))
    
    Site  = "https://muzmo.website/music/"
    Link  = "norber=\"(.-)\""
    Title = "xftitle=\"(.-)\""
    
    
    function findMusic(Search:string){
        if(httpCanRequest()){
            soundPurge()
            httpRequest(Site + httpUrlEncode(Search))
        }else{
            timer("reset" , 500)
        }
    }
}

if(changed(owner():keyPressed("K")) & owner():keyPressed("K") | dClk("close")){ 
    Show = !Show
    dShow("Panel" , Show)
    enableMouse(Show)
}

if(changed(dClk("Find")) & dClk("Find")){
    local Text = dSval("SearchBox")
    Names:clear()
    Links:clear()
    Request:clear()
    if(Text){
        TextSearch = Text
        findMusic(TextSearch)
    }
}

if(httpClk()){
    local Data = httpData()
    Request = Data:gmatch(Link)
    Titl =  Data:gmatch(Title)
    for(I = 1 , Request:count()){
       # Names:pushArray(array(Request[I,array][1,string],Titl[I,array][1,string] ))
        Names:pushString(Titl[I,array][1,string])
        Links:pushString(Request[I , array][1 , string])
        
    }
    dArray("List" , Names)
    
}

if(clk("reset")){
    findMusic(TextSearch)
}

if(dClk("Play")){
    foreach(I , S:string = Names){
        if(S == dSval("List")){
            Music = Links[I , string]
        }
    }
    
    soundURLload(1 , Music , 1 , 0 , holoEntity(28))
    setName("Music: " + dSval("List"))
    print(Music)
}

@name FFT_Clip
@persist [E O Eb]:entity F:array SS Size
@persist [Site Link Title TextSearch Music]:string
@persist [Table Request Titl]:table
@persist [Names]:array
@persist I 
@persist SongInfo:string Show On Index Hour Min Sec N
@persist [URLs SongsNames Durations]:table [SongsInfo FFT]:array

if(first())
{
    noDuplications()
    E=entity()
    O=owner()
    
    dPanel("Menu",vec2(scrW()/2,scrH()/2),vec2(350,330))
    dColor("Menu",55,155,155,155)
    dShowCloseButton("Menu",0)
    dShow("Menu",0)
    
    dTextBox("String","Menu",vec2(5,28),260)
    
    dButton("Search","Menu",vec2(266,28),vec2(79,20))
    
    dSlider("Volume","Menu", vec2(8,290),350,0,100)
    dSetNval("Volume",100)
    
    dButton("Play","Menu",vec2(5,49),vec2(340,20))
    
    dListBox("Songs","Menu",vec2(5,70),vec2(340,225))
    dColor("Songs",55,155,155,155)
    
    setName("Music Player" +
        "\nSleepeng mode")
    
    soundURLPurge()
    runOnKeys(O,1)
    runOnHTTP(1)
    runOnTick(1)
}

if(changed(O:keyPressed("T")) & O:keyPressed("T"))
{
    Show = !Show
    dShow("Menu",Show)
    enableMouse(Show)
}

if(dClk("Search"))
{
    SongsInfo:clear()
    local Request = "https://muzmo.website/music/" + httpUrlEncode(dSval("String"))
    httpRequest(Request)
}

if(httpClk())
{
    local Data = httpData()
    URLs = Data:gmatch("norber%=\"(.-)\"")
    SongsNames = Data:gmatch("xftitle=\"(.-)\"")
    Durations = Data:gmatch("td class=\"time\">(.-)</td>")
    
    if(URLs:count())
    {
        for(I = 1,URLs:count())
        {
            local Time = Durations[I,array][1,string]
            local SongName = SongsNames[I,array][1,string]
            SongsInfo:pushString((I + ". [" + Time + "] " + SongName):replace("&gt;",">"):replace("&amp;","&"):replace("&quot;","\""))
        }
    }
    else
    {
        SongsInfo:setString(1,"  !")
    }
    
    dArray("Songs",SongsInfo)
}

if(dClk("Play"))
{
    local Index = dSval("Songs"):explode("."):string(1):toNumber()
    On = 1
    
    soundURLPurge()
    soundURLload(1,URLs[Index,array][1,string],1,0,E)
    soundURLvolume(1,dNval("Volume") / 100)
    print(URLs[Index,array][1,string])
    
    local T = Durations[Index,array][1,string]:reverse():explode(":")
    Hour = T:string(3):reverse():toNumber()
    Min = T:string(2):reverse():toNumber()
    Sec = T:string(1):reverse():toNumber()
}

if(On)
{
    local Timer = floor(curtime())
    if(changed(Timer))
    {
        Sec = (Sec - 1) % 60
        Min = (Min - floor(Sec / 59)) % 60
        Hour -= floor(Min / 59)
        local Time = Hour + ":" + ((Min > 9)? Min:toString() : "0" + Min) + ":" + ((Sec > 9)? Sec:toString() : "0" + Sec)
        
        setName("Music Player" +
            "\nNow playing:" +
            "\n" + SongInfo +
            "\nTime left: " + Time +
            "\nVolume: " + round(dNval("Volume")))
        
        if(Hour < 0)
        {
            On = 0
        }
    }
    
    if(changed(dNval("Volume")))
    {
        soundURLvolume(1,dNval("Volume") / 100)
    }
}
else
{
    setName("Music Player" +
        "\nSleepeng mode")
}


####
if(first()){
    runOnTick(1)    
    runOnHTTP(1)    
}

SS=(SS+0.01)%360

if(first()){
    Size=1.3
    noDuplications()
    
    for(I=1,26){    
        holoCreate(I,E:toWorld(vec(-3+I*15,0,80)*Size))
        holoClipEnabled(I,1)
        holoParent(I,E)
        holoAng(I,E:toWorld(ang(90,0,0)))
        holoScale(I,vec(1,1,2.3)*Size)
        holoDisableShading(I,1)
        holoModel(I,"models/Mechanics/gears2/pinion_40.mdl")
        holoMaterial(I,"models/debug/debugwhite")
        holoColor(I,hsv2rgb(I*360/26,1,1))      
        
        holoCreate(1000+I,E:toWorld(vec(-3+I*15,0,80)*Size))
        holoScale(1000+I,vec(1.2,0.4,0.3)*Size)
        holoDisableShading(1000+I,1)
        holoColor(1000+I,hsv2rgb(I*360/26,1,1))
        holoAlpha(1000+I,0)
        holoClip(I,vec(0,0,0),vec(0,0,-1),holoEntity(1000+I))
    }
    holoCreate(27,E:toWorld(vec(200,5,80)*Size))
    holoParent(27,E)
    holoScale(27,vec(35,1,12.5)*Size)
    holoDisableShading(27,1)
    holoColor(27,vec(0))
    
    holoCreate(28,E:toWorld(vec(200,5,80)*Size))
    holoParent(28,E)
    holoScale(28,vec(-35.5,-1.5,-13)*Size)
    holoDisableShading(28,1)
    
    #soundURLload(1,"https://musicport.org/dl/1102318462/Akame_ga_Kill_-_OP-2_(musicport.org).mp3",100,0,Eb)
    #http://142.4.217.133:9848/stream
    #http://air.radiorecord.ru:8102/dub_320
}


F=entity():soundFFT(1)
   
for(I=1,26)
{
    S=clamp(sqrt(F[I, number]*sqrt(F[I, number])*sqrt(F[I, number])), 0, 1000)
    holoPos(1000+I,E:toWorld(vec(-3+I*15,0,20+S)*Size))
}
holoColor(28,hsv2rgb(SS,1,S))
