@name Craft_Table_V4
@model models/hunter/blocks/cube1x1x05.mdl
@inputs [Chair E O]:entity
@persist [Btn Player]:entity [Craft]:table [Str]:string N Pos
@persist [DropModel StickModel WoodPlanks Wood Stone]:string

if( first() ){
    propSpawnUndo(0)
    E = entity()
    E:noCollideAll(0)
    
    noDuplications()
    
    local S_E = E:boxSize()
    Str = ""
    E:setMaterial( "sprops/textures/sprops_wood2" )
    
    DropModel="models/hunter/blocks/cube025x025x025.mdl"
    StickModel="models/hunter/plates/plate025.mdl"
    
    Stone="models/props_buildings/destroyedbuilldingwall01a"    
    Wood="sprops/trans/misc/tracks_wood"
    WoodPlanks="phoenix_storms/wood"
    
    for(I=0,8){
        if(I%3==0){
            Pos=Pos+15
        }
        holoCreate(I+1, entity():toWorld(vec(30-Pos, 15-I % 3*15, 12)))
        holoColor(I+1,vec(100))
        holoMaterial(I+1,"sprops/textures/sprops_wood2")
        holoParent(I+1,E)
        holoScaleUnits(I+1,vec(12,12,0.01))
    }

    Btn = propSpawn("models/hunter/blocks/cube025x025x025.mdl",E:pos()-E:forward()*18,ang(),1)
    Btn:setMaterial("sprops/textures/sprops_wood2")
    Btn:setColor(vec(180))
    Btn:weldTo(E,1)
    
    runOnUse( 1 , Btn )
    
    function array t( N:number ){
        return Craft[ N , array ]    
    }
    
    function number addCraftMat(Ing1:string, Ing2:string, Ing3:string, Ing4:string, Ing5:string, Ing6:string, Ing7:string, Ing8:string, Ing9:string){
        if( t(1)[ 2 , entity ]:getMaterial() == Ing1 & t(2)[ 2 , entity ]:getMaterial() == Ing2 & t(3)[ 2 , entity ]:getMaterial() == Ing3 & 
        t(4)[ 2 , entity ]:getMaterial() == Ing4 & t(5)[ 2 , entity ]:getMaterial() == Ing5 & t(6)[ 2 , entity ]:getMaterial() == Ing6 & 
        t(7)[ 2 , entity ]:getMaterial() == Ing7 & t(8)[ 2 , entity ]:getMaterial() == Ing8 & t(9)[ 2 , entity ]:getMaterial() == Ing9){
            E:soundPlaySingle("buttons/button6.wav",100,100)
            return 1
        }else{
            return 0
        }
    }
    function number addCraftMdl(Ing1:string, Ing2:string, Ing3:string, Ing4:string, Ing5:string, Ing6:string, Ing7:string, Ing8:string, Ing9:string){
        if( t(1)[ 2 , entity ]:model() == Ing1 & t(2)[ 2 , entity ]:model() == Ing2 & t(3)[ 2 , entity ]:model() == Ing3 & 
        t(4)[ 2 , entity ]:model() == Ing4 & t(5)[ 2 , entity ]:model() == Ing5 & t(6)[ 2 , entity ]:model() == Ing6 & 
        t(7)[ 2 , entity ]:model() == Ing7 & t(8)[ 2 , entity ]:model() == Ing8 & t(9)[ 2 , entity ]:model() == Ing9){
            return 1
        }else{
            return 0
        }
    }
    
    function void craft(ResultMdl:string, ResultMat:string, ResultClr:vector,Count){
        for(Pr=1,Count){
            local P = propSpawn(ResultMdl,holoEntity(5):pos()+vec(0,0,20+((Pr-1)*25)),ang(),0)
            P:setMaterial(ResultMat)
            P:remove(300)
        }
    }
    function void craft_edit( Tbl:table ){
        
        local Count = Tbl:count() 
        
        for( I = 1 , 9 ){
            local Num = Tbl[ I , array ][ 1 , number ]
            if( Num ){
                Str += "1"  
            }else{
                Str += "0"     
            }      
        }
        
        # CRAFTS
        
        switch( Str ){
            case "000010000",
                if(addCraftMdl("", "", "", 
                                "", DropModel, "", 
                                "", "", "")){
                                    
                    if(addCraftMat("", "", "", 
                                    "", Wood, "", 
                                    "", "", "")){
                        craft(DropModel,WoodPlanks,vec(255,255,255),4)
                        for(I=1,9){
                            Tbl[ I , array ][ 2 , entity ]:propDelete()
                        }
                        Tbl:clear()
                    }
                }else{
                }
            break
            
            case "000011000",
                if(addCraftMdl("", DropModel, "", 
                                "", DropModel, "", 
                                "", "", "")){
                                    
                    if(addCraftMat("", WoodPlanks, "", 
                                    "", WoodPlanks, "", 
                                    "", "", "")){
                        craft(StickModel,WoodPlanks,vec(255,255,255),4)
                        for(I=1,9){
                            Tbl[ I , array ][ 2 , entity ]:propDelete()
                        }
                        Tbl:clear()
                    }
                }else{
                
                }
            break
        }
          
    }
        
    function void craft_item(){
        
        for( I = 1 , 9 ){
            local Hl = holoEntity(I)
            local H = Hl:boxSize()[2]/2-10
            findIncludeClass("prop_physics")
            findInBox( Hl:pos()+vec(-H,-H,0) , Hl:pos()+vec(H,H,10) )
            
            if( find() ){
                Craft[ I , array ] = array( I , find() )   
            }    
        }
        
        Str = ""
        
        craft_edit( Craft )
            
    }
        
}
if(changed(Chair:isValid()) & Chair:isValid()){
    Chair:propFreeze(1)
    Chair:setPos(E:toWorld(vec(-50,0,0)))
    Chair:setAng(E:toWorld(ang(0,-90,0)))
    for(I=1,players():count()){
    }
}
if(Chair:isValid()){
    if( Btn:inUse() ){
        
        craft_item()
        Craft = table()
            
    }
}
